install.packages("KernSmooth")
KernSmooth
packageVersion("KernSmooth")
packageDescription("KernSmooth")
packageStartupMessage(KernSmooth)
library(KernSmooth)
library(swirl)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
5 + 7
x <- 5+7
x
y<-x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2 + 1000
my_div
1:20
pi:10
15:1
?`:`
seq(1:20)
seq(1,20)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
my_seq <- seq(0,10,by=0.5)
my_seq <- seq(5,10,by=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir/")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename(from = "mytest.R",to = "mytest2.R")
file.copy(from = "mytest2.R",to = "mytest3.R")
file.path("mytest3.R")
file.path('folder1')
file.path('folder1','folder2')
?dir.create
dir.create(file.path("testdir2","testdir3")
)
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
unlink("testdir2/",recursive = TRUE)
unlink("testdir2",recursive = TRUE)
setwd(old.dir)
unlink("testdir",recursive = TRUE)
num_vect <- c(0.5, 55, -10, 6.)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name <- c(my_char,"Joel")
my_name
paste(mmy_char,collapse = " ")
paste(my_name,collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X", "Y", "Z"),sep = "")
paste(LETTERS,1:4,sep = "")
paste(LETTERS,1:4,sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=MA)
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data=1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- ("Bill","Gina","Kelly","Sean")
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical("twins","twins")
xor(5==6,!FALSE)
ints <- sample(10)
itns
ints
ints > 5
which(ints > 7)
any(ints < 0)
any(ints > 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
source('/var/folders/2v/bwt5p6mn55lf75vg6mpsjc4w0000gq/T//RtmpTmeLNg/boring_function.R')
boring_function()
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(2,4,5))
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11,num = 5)
remainder(4,div = 2)
args(remainder)
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(stderr,c(1.4, 3.6, 7.9, 8.8))
evaluate(func=stderr,dat=c(1.4, 3.6, 7.9, 8.8))
?stderr
evaluate(func=sd,dat=c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("hello")
submit()
mad_libs("place","adjective","noun")
submit()
'I' %p% 'love' %p% 'r'
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem),elem[2])
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
samples(LETTERS)
sample(LETTERS)
flips <- sample(0:1,100,replace = TRUE,prob = c(0.3,0.7))
flips <- sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips=1)
sum(flips==1)
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- replicate(100,rbinom(1, size = 1, prob = 0.7))
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(100,mean=100,sd=25)
rnorm(10,mean=100,sd=25)
rpois(5,19)
rpois(5,10)
my_pois <- replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
ime(Sys.time(), t1, units = 'days')
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(x = cars$speed, y = cars$dist, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim = c(10, 15))
plot(cars, pch=2)
load(mtcars)
data(mtcars)
?boxplot
boxplot(formula=mpg ~ cyl,data=mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
plot(y)
plot(x,y)
setwd("DataSciToolBox/datasciencecoursera/ExData/Quiz2/")
source("Quiz2.R")
install(httpuv)
install.packages(httpuv)
install.packages(httr)
install.packages("httr")
install.packages("httr")
install.packages("httpuv")
source("Quiz2.R")
source("Quiz2.R")
content(req)
req$date
df <- content(req)
df$created_at
df$permissions
df
class(df)
df["created_at"]
df[["created_at"]
]
df[[0]]
df[0]
df
df[1]
df[1]
df[1]$updated_at
df[[1]
]
df[[1]]$updated_at
df[[1]]$created_at
df[["datasharing"]]$created_at
df["datasharing"]$created_at
length(df)
for(i=0; i<length(df); i++){}
for(i in 1:length(df)){}
for(i in 1:length(df)){ if(df[[i]]$name == "datasharing"){print(i)}}
for(i in 1:length(df)){ if(df[[i]]$name == "datasharing"){df[[i]]$created_at}}
for(i in 1:length(df)){ if(df[[i]]$name == "datasharing"){print(df[[i]]$created_at)}}
install.packages("sqldf")
acs <- read.csv(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"))
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
df <- sqldf("select pwgtp1 from acs where AGEP < 50")
df2 <- acs[acs$AGEP < 50,]
df2 <- df2$pwgtp1
df["100"]
df[[100]
]
df[100,1]
df2[100]
sqldf("select distinct AGEP from acs")
df <- sqldf("select distinct AGEP from acs")
df <- sqldf("select unique AGEP from acs")
df <- sqldf("select distinct AGEP from acs")
df2 <- unique(acs$AGEP)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode[0]
htmlCode[1]
[1,2]
c(1,2)
for(i in c(10,20,30,100)){print(nchar(htmlCode[i]))}
x <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip=4)
x <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip=4,widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4)))
x <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip=4,widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
head(x)
sum(x$V4)
